name: online-payment-api CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start SSH agent and deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.NEW_SSH_PRIVATE_KEY }}
          SERVER: ${{ secrets.NEW_SERVER }}
          USERNAME: ${{ secrets.NEW_USERNAME }}
        run: |
          # Start the SSH agent
          eval $(ssh-agent -s)

          # Add the private key to the SSH agent
          # echo "$NEW_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

          # Save the SSH key to a temporary file
          echo "$NEW_SSH_PRIVATE_KEY" | tr -d '\r' > /tmp/ssh_key
          chmod 600 /tmp/ssh_key
          
          # Add the SSH key to the agent
          if ! ssh-add /tmp/ssh_key; then
            echo "Failed to add SSH key"
            exit 1
          fi
          
          # Clean up the temporary key file
          rm /tmp/ssh_key

          # Connect to the server and execute commands
          ssh -o StrictHostKeyChecking=no $USERNAME@$SERVER << 'EOF'
            cd ~/online_payment_api_fastApi
            git pull origin main  # Pull the latest changes from GitHub
            docker compose down   # Stop and remove the running containers
            docker compose up -d --build  # Rebuild and start containers in the background
          EOF
